De-authentication attack with EAPOL packets
-----------------
WPA2 EAPOL 4-way handshake
--
Key components:
PMK: Pairwise Master Key
  Generated from the PSK
PSK - Pre-Shared Key:
  The seed of it all is either a 256-bit key or is derived from a passphrase using the SSID as a salt

PSK=PBKDF2(HMAC-SHA1, Passphrase + SSID, 4096, 256)

This whole process is based on the assumption that both the authenticator and supplicant know the PMK. it is never transmitted.


Nonces (M1 & M2)
  ANONCE - AP generated random number
  SNONCE - Client generated random number
  Both introduce uniqueness/randomness to that session's variables

PTK - Pairwise Transit Key:
  Encrypts uni-cast traffic between the AP and cient
  Dependent on the PMK
PTK = SHA1(PMK + ANONCE + SNONCE + A-MAC + S + MAC)

GMK - Group Master Key
  Generated by the Authenticator
  Used to create the GTK

GTK - Group Temporal Key
  Encrypts broadcast and multi-cast traffic
  Shared between all clients associated to an AP


The PTK and GTK are split up into components that are the AES encryption keys for various traffic.
  KCK = PTK bits 0-127, the key confirmation key
  KEK = PTK bits 128-255, the key encryption key
  TEK = PTK bits 256-383, the temporal encryption key for unicast traffic
  TMK = PTK bits 384-511, the temporal MIS keys for TKIP
  GEK = GTK bits 0-127, the group encryption key for multicast traffic
  GIK = GTK bits 128-255, the group integrity key for TKIP

MIC - message integrity check
  Mainly for the AP to recognize that the message is really from this client
  Derived from the first half of the PTK

MIC = SHA1 (KCK, PAYLOAD)


De-authentication Attack Overview (DE-AUTH ATTACKS ARE ILLEGAL)
----
Purpose:
  To force a deice to re-authenticate and associate to an access point so we cacn collect the resulting 4-way handshake
  Targets the ommunication between the target AP and the client device
  Uses de-authentication frames sent from the attacker "as" the target access point, to a device, causing a disconnect. 

Minimum requirements of a De-Auth
--
SSID
ANONCE - (m1 and M2)
SNONCE - M2 only
A-MAC and S-MAC - M1-M4
A message's MIC - M2-M4

With messages 1 and 2, we have everything we need to contruct the PTK, minus the PMK which we will have to "guess" later.
Since the ANONCE appears in messages 1 and 3, we would also have everything we need if we only collected messages 2 and 3.
PTK=SHA1(PMK+ANONCE+SNONCE+A-MAC+S-MAC)


Terminal 1: Collection Interface
--
Prepare an airodump-ng command that specifies a file output (-w), locks to the channel of the target AP (-c), sets a filter to display only data for the target network (--bssid), and set your intended collection interface (wlan1).
sudo airodump-ng -w <FILENAME> -c <CHANNEL> --bssid <MAC ADDRESS> wlan1


Terminal 2: Attack interface
--
Prepare an aireplay-ng command that specifies attack mode "deauth"(-0) and count (1), the BSSID of the target network, the client MAC to effect, and set you intended attack interface. (count is counted in 128, so if count is 5 then the amount of packets sent would be 5x128))

sudo aireplay-ng -0 1 -a <BSSID> -c <CLIENT_MAC> wlan2
sudo aireplay-ng -0 5 -a <BSSID> -c <CLIENT_MAC> wlan2

If aireplay-ng indicated the interface is stuck on the wrong channel, run the following command to set the interface to the right channel:

sudo airmon-ng start wlan2 6


Clientless Attacks
------------------


