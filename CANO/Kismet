# Wireless NIC preparation #
----------------------------
On your laptop
sudo vim /etc/udev/rules.d/70-persistent-net.rules
  SUBSYSTEM=="net",ACTION=="add",DRIVERS=="?",ATTR{address}=="00:c0:ca:b4:88:6d",NAME="wlan1" (MAC address of ALFA card)

sudo vim /etc/default/grub
  GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"

sudo update-grub
sudo update-initramfs -u
reboot

On your laptop and pi
sudo hostnamectl set-hostname (whatever hostname you would like to use)
sudo vim /etc/hosts (change the hostname)

Drivers are specific to the chipset used by the wireless NIC.
Common chipsets are
  Atheros
  Mediatek 
  Broadcom
  Realtek
  use the command lsusb to see if your operating system recognize the WNIC

sudo ethtool -i wlan1 (interface name)

GPS On Laptop
---------
Configure your GPS (BU-353S4) by editing the /etc/default/gpsd file and add:
(sudo apt install gpsd)
  START_DAEMON="true" (startsthe gpsd on boot)
  USBAUTO="true" (allows hot plugging)
  DEVICES="/dev/ttyUSB0" (tells where to find the GPS)
  GPSD_OPTIONS="-n -G -b"
  GPSD_SOCKET="/var/run/gpsd.sock"

sudo systemctl restart gpsd

Test your GPS feed by plugging the BU-353 (GPS Adapter) into your laptop and running cpgs or gpsmon command

Aircrack-NG software
----------------------------

Kismet software
----------------------------
Open-source wireless network and device detector, sniffer, and wardriving tool.
https://kismetwireless.net/packages/

While the Aircrack-ng suite of tools has active attack software, kismet is entirely passive.

On pi
----
wget -O - https://www.kismetwireless.net/repos/kismet-release.gpg.key --quiet | gpg --dearmor | sudo tee /usr/share/keyrings/kismet-archive-keyring.gpg >/dev/null
echo 'deb [signed-by=/usr/share/keyrings/kismet-archive-keyring.gpg] https://www.kismetwireless.net/repos/apt/release/bookworm bookworm main' | sudo tee /etc/apt/sources.list.d/kismet.list >/dev/null
sudo apt update
sudo apt install kismet

On laptop
----
wget -O - https://www.kismetwireless.net/repos/kismet-release.gpg.key --quiet | gpg --dearmor | sudo tee /usr/share/keyrings/kismet-archive-keyring.gpg >/dev/null
echo 'deb [signed-by=/usr/share/keyrings/kismet-archive-keyring.gpg] https://www.kismetwireless.net/repos/apt/release/jammy jammy main' | sudo tee /etc/apt/sources.list.d/kismet.list >/dev/null
sudo apt update
sudo apt install kismet

sudo usermod -aG kismet a28 (username)
sudo usermod -aG kismet pi (username)
if opening kismet and there are no interfaces, you probably skipped this step

On laptop and pi
kismet_site.conf is the all powerful file that can overwrite all of the below files
  sudo vim /etc/ksimet/kismet_logging.conf
    Log_title: allows for customizing the name of the file (default name will be very hard to read and specific about the time that it was collected)
    Log_types=kismet,pcapppi

sudo vim /etc/kismet/kismet_filter.conf
  Kismet can filter packets that are logged to the kismetdb log file. This can be used to exclude known devices, to include only specified devices, etc. Works by PASS or BLOCK rules
  GROUP MATCHES: MAC can be specified as single addresses (AA:BB:CC:DD:EE:FF) or as a masked group (AA:BB:CC:00:00:00)
  DEVICE FILTERS: Filtering devices from the DB does not prevent kismet from displaying the device, but does prevent kismet from saving them.

sudo vim /etc/kismet/kismet_alerts.conf
  Kismet_alerts.conf can be configured to alert you when devices are identified, lost, or when spoofed SSIDs appear nearby
  The 'alert' will appear in the kismet GUI at the top right, and in the alerts tab

sudo vim /etc/kismet/kismet.conf
  Ensure that your GPS is working
    cgps or gpsmon
  gps=gpsd:host=localhost,port2947,reconnect=true

Data management
----------------------------


